/**
 * Created by Tomas on 8/16/2015.
 */
"use strict";
define(['application-configuration','lodash'], function (app) {
    app.register.directive('actionAddEditSiteMapping',['customerSettingsFactory','Notify',
        function (customerSettingsFactory,Notify) {
            return {
                restrict: 'E',
                scope: {
                    show: '=info',
                    message:'=',
                    data:'=',
                    selectedData:'=',
                    windowCloseListener:'&',
                    customer:'=',
                    isEdit:'='
                },
                controller:function($scope){
                    $scope.onlyNumbers = /[^0-9\.]+/g;
                    $scope.latDegree="";
                    $scope.latMinute="";
                    $scope.latSecond="";
                    $scope.lonDegree="";
                    $scope.lonMinute="";
                    $scope.lonSecond="";
                    $scope.latitudes = [{Value:"N"},{Value:"S"}];
                    $scope.longitudes = [{Value:"E"},{Value:"W"}];
                    $scope.selectedLatitude = $scope.latitudes[0];
                    $scope.selectedLongitude =  $scope.longitudes[0];
                    $scope.latitudeChange = function(lat){
                        $scope.selectedLatitude.Value = lat.Value;
                    };
                    $scope.longitudeChange = function(lon){
                        $scope.selectedLongitude.Value = lon.Value;
                    };
                    $scope.onlyDigits = function(){
                        $scope.latDegree = !angular.isUndefined($scope.latDegree) ? $scope.latDegree.toString().replace($scope.onlyNumbers, "") : $scope.latDegree;
                        $scope.latMinute = !angular.isUndefined($scope.latMinute) ? $scope.latMinute.toString().replace($scope.onlyNumbers, "") : $scope.latMinute;
                        $scope.latSecond = !angular.isUndefined($scope.latSecond) ? $scope.latSecond.toString().replace($scope.onlyNumbers, "") : $scope.latSecond;
                        $scope.lonDegree = !angular.isUndefined($scope.lonDegree) ? $scope.lonDegree.toString().replace($scope.onlyNumbers, "") : $scope.lonDegree;
                        $scope.lonMinute = !angular.isUndefined($scope.lonMinute) ? $scope.lonMinute.toString().replace($scope.onlyNumbers, "") : $scope.lonMinute;
                        $scope.lonSecond = !angular.isUndefined($scope.lonSecond) ? $scope.lonSecond.toString().replace($scope.onlyNumbers, "") : $scope.lonSecond;
                        validateRange();
                    };
                    function validateRange(){
                        $scope.latDegree =  $scope.latDegree > 180 ? 180 : $scope.latDegree;
                        $scope.lonDegree =  $scope.lonDegree > 180 ? 180 : $scope.lonDegree;
                        if($scope.latDegree == 180){
                            $scope.latMinute = 0;
                            $scope.latSecond = 0
                        }
                        if($scope.lonDegree == 180){
                            $scope.lonMinute = 0;
                            $scope.lonSecond = 0;
                        }
                    }
                },
                link:function (scope, el, attrs) {
                    var latitude = [];
                    var longitude = [];
                    var splitString = /[^0-9\.NSEW]+/g;
                    scope.mapData = {};
                    scope.selectedSite = {};
                    scope.countries = [];
                    scope.distinctSiteList = [];
                    angular.copy(scope.data,scope.mapData);
                    scope.dialogStyle = {};

                    if (attrs.width)
                        scope.dialogStyle.width = attrs.width;
                    if (attrs.height)
                        scope.dialogStyle.height = attrs.height;
                    scope.hideModal = function() {
                        scope.show = false;
                        scope.windowCloseListener();
                    };

                    InitializeData();
                    function InitializeData(){
                        scope.countries = scope.mapData.MappedCountryList;

                        if(!scope.isEdit){
                            scope.title = "Add site clustering";
                            scope.selectedCountry= scope.countries[0];

                        }else{
                            scope.title = "Edit site clustering";
                            angular.copy(scope.selectedData,scope.selectedSite);
                            var cIndex = _.findIndex(scope.countries ,function(n){
                                return n.Countrykey === scope.selectedSite.CountryKey;
                            });
                            scope.selectedCountry= scope.countries[cIndex];
                            if(scope.selectedSite.Sites){
                                _.forEach(scope.selectedSite.Sites,function(f){
                                  scope.distinctSiteList.push({isSelected:true,ClusterId: f.ClusterId,SiteId: f.SiteId,SiteName: f.SiteName,GroupId: f.GroupId});
                            });
                           }

                            var latValue = scope.selectedSite.Lat.trim().replace(splitString, "-");
                            var lonValue = scope.selectedSite.Lon.trim().replace(splitString, "-");
                            latitude = latValue.split("-");
                            longitude = lonValue.split("-");
                            scope.latDegree = latitude[0];
                            scope.latMinute = latitude[1];
                            scope.latSecond = latitude[2];
                            var latIndex = _.findIndex(scope.latitudes ,function(n){
                                return n.Value === latitude[3].toString().trim();
                            });
                            scope.selectedLatitude = scope.latitudes[latIndex];
                            scope.lonDegree = longitude[0];
                            scope.lonMinute = longitude[1];
                            scope.lonSecond = longitude[2];
                            var lonIndex = _.findIndex(scope.longitudes ,function(n){
                                return n.Value === longitude[3].toString().trim();
                            });
                            scope.selectedLongitude = scope.longitudes[lonIndex];
                        }
                        if(scope.mapData.UnmappedSiteCollection && scope.mapData.UnmappedSiteCollection.length > 0){
                            _.forEach(scope.mapData.UnmappedSiteCollection,function(f){
                                scope.distinctSiteList.push({isSelected:false,ClusterId: null,SiteId:null,SiteName: f,GroupId: null});
                            });
                        }

                        scope.selectedSite.CountryKey = scope.selectedCountry.Countrykey;
                    }
                    scope.$on(Notify.CUSTOMER_SETTINGS_SITE_CLUSTER_ADD_UPDATE_SUCCESS,function(event){
                        scope.hideModal();
                    });
                    scope.addEditSiteMapping=function(){
                        if (scope.siteForm.$valid){
                            scope.selectedSite.Sites = [];
                            refreshObject(scope.selectedSite);
                            addMappedValues(scope.selectedSite);

                            if(!validInput())
                                return;

                            var attrRoute="/"+scope.customer.SessionId+"/"+scope.customer.CustomerId;
                            customerSettingsFactory.AddUpdateSiteCluster(scope.selectedSite,attrRoute);
                        }
                    };
                    function validInput(){
                        var valid = true;
                        if(scope.latMinute > 59 || scope.latSecond > 59){
                            valid = false;
                        }
                        if(scope.lonMinute > 59 || scope.lonSecond > 59){
                            valid = false;
                        }
                        if(valid && scope.selectedSite.Sites && scope.selectedSite.Sites.length <= 0){
                            valid = false;
                            alert("No site value selected for clustering");
                        }
                        return valid;
                    }
                    var refreshObject = function(selectedSite){
                        var latitude = scope.latDegree+"° "+scope.latMinute+" ' "+scope.latSecond+" \" "+scope.selectedLatitude.Value;
                        var longitude = scope.lonDegree+"° "+scope.lonMinute+" ' "+scope.lonSecond+" \" "+scope.selectedLongitude.Value;
                        selectedSite.Lat = latitude;
                        selectedSite.Lon = longitude;

                        return selectedSite;
                    };
                    var addMappedValues = function(selectedSite){
                        _.forEach(scope.distinctSiteList,function(f){
                            if(f.isSelected){
                                selectedSite.Sites.push({ClusterId: f.ClusterId,SiteId: f.SiteId,SiteName: f.SiteName,GroupId: f.GroupId});
                            }
                        });
                        return selectedSite;
                    };
                    scope.countrySelectionChange = function(country){
                        scope.selectedSite.CountryId = country.Countrykey;
                    }
                },
                templateUrl: 'Views/CustomerSettings/SiteClustering/AddEditSiteMappingTemplate.html'
            };
        }]);

});
