"use strict";

define(['application-configuration', 'alertsService', 'dataFactory','ViewDataFactory', 'datasetSelectionFactory', 'leftMenuSlidingWindowEventNotifyFactory'], function (app) {

    app.register.controller('serviceAreaScoreBoxController', ['$scope', 'alertsService', 'dataFactory','ViewDataFactory', 'appSettings', 'Notify', 'ComparatorType', 'comparatorFactory', 'datasetSelectionFactory', 'leftMenuSlidingWindowEventNotifyFactory',
        function ($scope, alertsService, dataFactory,ViewDataFactory, appSettings, Notify, ComparatorType, comparatorFactory, datasetSelectionFactory, leftMenuSlidingWindowEventNotifyFactory) {

            $scope.leftMenuSlidingWindowEventNotify = leftMenuSlidingWindowEventNotifyFactory;
            initializeData();

            function initializeData() {
                prepareDefaultData();
            }
            function prepareDefaultData() {


                var serviceAreaCollection = dataFactory.ServiceAreaScoreDataCollection();

                $scope.generalSurveyCollection = function(){
                    return _.filter(serviceAreaCollection, function(n){
                        return n.SurveyType == "GEN" || n.SurveyType == "NOG";
                    });
                }();
                $scope.triggerSurveyCollection =  function(){
                    var tmp =  _.filter(serviceAreaCollection, function(n){
                        return n.SurveyType == "TCK";
                    });
                    return _.sortByOrder(tmp,"SortOrder",true);
                }();

                prepareDefaultScoreDataCollection();
            }


            $scope.onServiceAreaClicked = function (selectedServiceArea) {
                var selectedId = selectedServiceArea.Id;
                dataFactory.ServiceAreaChanged(selectedId);

                if (selectedId === "OS" || selectedId === "TCK" || selectedId === "SES") {
                    prepareDefaultScoreDataCollection();
                } else {
                    prepareScoreDataCollectionOnClick(selectedId);
                }
            }

            /**
             * This method combine group data of General and Triggered
             *
             * @param generalData, triggerData
             */
            function prepareDefaultScoreDataCollection() {

                var generalScoreData = ViewDataFactory.getServiceAreaDataById('OS');;
                var triggerScoreData = ViewDataFactory.getServiceAreaDataById('TCK');

                if(!triggerScoreData)
                    triggerScoreData = ViewDataFactory.getServiceAreaDataById('SES');

                var combinedQuestionList = [];

                _.forEach(generalScoreData, function (n, key) {
                    var temp = _.assign({}, n);
                    combinedQuestionList.push(temp);
                });

                _.forEach(triggerScoreData, function (n, key) {
                    var temp = _.assign({}, n);
                    combinedQuestionList.push(temp);
                });

                $scope.combinedScoreDataCollection = combinedQuestionList;
            }

            function prepareScoreDataCollectionOnClick(serviceAreaId) {
                var scoreDataCollection = ViewDataFactory.getServiceAreaDataById(serviceAreaId);
                var combinedQuestionList = [];
                _.forEach(scoreDataCollection, function(n, key){
                    var temp = _.assign({}, n);
                    combinedQuestionList.push(temp);
                });
                $scope.combinedScoreDataCollection = combinedQuestionList;
            }
        }]);
});
