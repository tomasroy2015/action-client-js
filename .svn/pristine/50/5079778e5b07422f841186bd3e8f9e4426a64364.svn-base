"use strict";

define(['application-configuration', 'alertsService', 'bootstrap', 'leftMenuController', 'headerController', 'accountFactory', 'datasetSelectionFactory', 'dataFactory', 'comparatorFactory','leftMenuSlidingWindowEventNotifyFactory'], function (app) {

    app.register.controller('actionRootController', ['$scope', '$rootScope', 'alertsService', 'accountFactory', 'Notify', 'datasetSelectionFactory', 'dataFactory', 'ComparatorType', 'comparatorFactory', 'leftMenuSlidingWindowEventNotifyFactory',
        function ($scope, $rootScope, alertsService, accountFactory, Notify, datasetSelectionFactory, dataFactory, ComparatorType, comparatorFactory, leftMenuSlidingWindowEventNotifyFactory) {
            $rootScope.applicationModule = "MainLayout";

            loadInitialData();

            function loadInitialData() {
                $scope.selectedComparator = null;
                $scope.isDoubleTargetSelected = false;
                $scope.active = false;
                $scope.selectedDataset = datasetSelectionFactory;
            };

            //function loadDatasetClicked(){
            //    leftMenuSlidingWindowEventNotifyFactory.setDatasetLoadEvent(true);
            //    return datasetSelectionFactory;
            //};
            $scope.logoutMain = function () {
                $rootScope.IsloggedOut = false;
                $rootScope.loadTitle = "Log out";
                var user = accountFactory.UserData();
                accountFactory.LogOut(user);
            };

            $scope.updateComparatorType = function (type) {
                comparatorFactory.UpdateComparatorType(type);
            };

            $scope.doubleTargetSelection_Handler = function () {
                $scope.isDoubleTargetSelected = !$scope.isDoubleTargetSelected;
            };

            $scope.initializeComparator = function () {
                $scope.selectedComparator = comparatorFactory.GetSelectedComparatorType();
            };
//        $scope.logoutCompleted = function (response) {
//            window.location = "#/";
//        };
//
//        $scope.logoutError = function (response) {
//            alertsService.RenderErrorMessage(response.ReturnMessage);
//        };
            $scope.$on(Notify.LOGOUT_SUCCESSFUL, function (event) {
                window.location = "#/";
                $rootScope.isNeedToShowLoading = false;
            });

            $scope.$on("listviewActive", function (event) {
                $scope.active = true;
            });

            $scope.compareSettingOkBtnClick = function () {
                leftMenuSlidingWindowEventNotifyFactory.setCompareSettingsOkBtnEvent(true);
            };

        }]);

});
