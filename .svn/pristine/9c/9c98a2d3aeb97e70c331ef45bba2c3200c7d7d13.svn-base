/**
 * Created by Tomas on 8/16/2015.
 */
"use strict";
define(['application-configuration','lodash'], function (app) {
    app.register.directive('actionAddEditRegionMapping',['customerSettingsFactory','Notify','$filter',
        function (customerSettingsFactory,Notify,$filter) {
            return {
                restrict: 'E',
                scope: {
                    show: '=info',
                    message:'=',
                    data:'=',
                    selectedData:'=',
                    windowCloseListener:'&',
                    customer:'=',
                    isEdit:'='
                },
                controller:function($scope){
                    $scope.onlyNumbers = /[^0-9]+/g;
                    $scope.latDegree="";
                    $scope.latMinute="";
                    $scope.latSecond="";
                    $scope.lonDegree="";
                    $scope.lonMinute="";
                    $scope.lonSecond="";
                    $scope.latitudes = [{Value:"N"},{Value:"S"}];
                    $scope.longitudes = [{Value:"E"},{Value:"W"}];
                    $scope.selectedLatitude = $scope.latitudes[0];
                    $scope.selectedLongitude =  $scope.longitudes[0];
                    $scope.latitudeChange = function(lat){
                        $scope.selectedLatitude.Value = lat.Value;
                    };
                    $scope.longitudeChange = function(lon){
                        $scope.selectedLongitude.Value = lon.Value;
                    };
                    $scope.onlyDigits = function(){
                        $scope.latDegree = !angular.isUndefined($scope.latDegree) ? $scope.latDegree.toString().replace($scope.onlyNumbers, "") : $scope.latDegree;
                        $scope.latMinute = !angular.isUndefined($scope.latMinute) ? $scope.latMinute.toString().replace($scope.onlyNumbers, "") : $scope.latMinute;
                        $scope.latSecond = !angular.isUndefined($scope.latSecond) ? $scope.latSecond.toString().replace($scope.onlyNumbers, "") : $scope.latSecond;
                        $scope.lonDegree = !angular.isUndefined($scope.lonDegree) ? $scope.lonDegree.toString().replace($scope.onlyNumbers, "") : $scope.lonDegree;
                        $scope.lonMinute = !angular.isUndefined($scope.lonMinute) ? $scope.lonMinute.toString().replace($scope.onlyNumbers, "") : $scope.lonMinute;
                        $scope.lonSecond = !angular.isUndefined($scope.lonSecond) ? $scope.lonSecond.toString().replace($scope.onlyNumbers, "") : $scope.lonSecond;
                        validateRange();
                    };
                    function validateRange(){
                        $scope.latDegree =  $scope.latDegree > 180 ? 180 : $scope.latDegree;
                        $scope.lonDegree =  $scope.lonDegree > 180 ? 180 : $scope.lonDegree;
                        if($scope.latDegree == 180){
                            $scope.latMinute = 0;
                            $scope.latSecond = 0
                        }
                        if($scope.lonDegree == 180){
                            $scope.lonMinute = 0;
                            $scope.lonSecond = 0;
                        }
                    }
                },
                link:function (scope, el, attrs) {
                    var latitude = [];
                    var longitude = [];
                    var splitString = /[^0-9\.NSEW]+/g;
                    var ownRegionName = "";
                    scope.isSaveBtnClicked = false;
                    scope.mapData = {};
                    scope.selectedRegion = {};
                    scope.countries = [];
                    scope.distinctRegionList = [];
                    angular.copy(scope.data,scope.mapData);
                    scope.dialogStyle = {};
                    scope.valueText = "City(s)";
                    scope.isSearchDialogShown = false;
                    if (attrs.width)
                        scope.dialogStyle.width = attrs.width;
                    if (attrs.height)
                        scope.dialogStyle.height = attrs.height;
                    scope.hideModal = function() {
                        scope.show = false;
                        scope.windowCloseListener();
                    };

                    InitializeData();
                    function InitializeData(){
                        scope.countries = scope.mapData.MappedCountryList;

                        if(!scope.isEdit){
                            scope.title = "Add region mapping";
                            scope.selectedCountry= scope.countries[0];

                        }else{
                            scope.title = "Edit region mapping";
                            angular.copy(scope.selectedData,scope.selectedRegion);
                            var cIndex = _.findIndex(scope.countries ,function(n){
                                return n.Countrykey === scope.selectedRegion.CountryId;
                            });
                            scope.selectedCountry= scope.countries[cIndex];
                            if(scope.selectedRegion.RegionMappingDetails){
                                _.forEach(scope.selectedRegion.RegionMappingDetails,function(f){
                                  scope.distinctRegionList.push({isSelected:true,Value: f.MappedValue});
                            });
                           }
                            var latValue = scope.selectedRegion.Latitude.trim().replace(splitString, "-");
                            var lonValue = scope.selectedRegion.Longitude.trim().replace(splitString, "-");
                            latitude = latValue.split("-");
                            longitude = lonValue.split("-");
                            scope.latDegree = latitude[0];
                            scope.latMinute = latitude[1];
                            scope.latSecond = latitude[2];
                            var latIndex = _.findIndex(scope.latitudes ,function(n){
                                return n.Value === latitude[3].toString().trim();
                            });
                            scope.selectedLatitude = scope.latitudes[latIndex];
                            scope.lonDegree = longitude[0];
                            scope.lonMinute = longitude[1];
                            scope.lonSecond = longitude[2];
                            var lonIndex = _.findIndex(scope.longitudes ,function(n){
                                return n.Value === longitude[3].toString().trim();
                            });
                            scope.selectedLongitude = scope.longitudes[lonIndex];
                            ownRegionName = scope.selectedRegion.Name;
                        }
                        if(scope.mapData.UnmappedRegionCollection && scope.mapData.UnmappedRegionCollection.length > 0){
                            _.forEach(scope.mapData.UnmappedRegionCollection,function(f){
                                scope.distinctRegionList.push({isSelected:false,Value: f});
                            });
                        }
                        if(scope.customer.RegionMappingAttributeIndex != null && !angular.isUndefined(scope.customer.RegionMappingAttributeIndex)){
                            scope.valueText = (scope.customer.RegionMappingAttributeIndex == 3) ? "Site(s)" : "City(s)";
                        }
                        scope.selectedRegion.CountryId = scope.selectedCountry.Countrykey;
                    }
                    scope.$on(Notify.CUSTOMER_SETTINGS_REGIONMAPPING_ADD_UPDATE_SUCCESS,function(event){
                        scope.hideModal();
                    });
                    scope.addEditRegionMapping=function(){
                        scope.isSaveBtnClicked = true;
                        if (scope.regionForm.$valid) {
                            scope.selectedRegion.RegionMappingDetails = [];
                            refreshObject(scope.selectedRegion);
                            addMappedValues(scope.selectedRegion);

                            if(!validInput())
                                return;

                            var attrRoute = "/" + scope.customer.SessionId + "/" + scope.customer.CustomerId;
                            customerSettingsFactory.AddUpdateRegionMapping(scope.selectedRegion, attrRoute);
                        }
                    };
                    function validInput(){
                        var valid = true;
                        if(angular.isUndefined(ownRegionName))
                            ownRegionName = "";
                        scope.isExist = false;
                        if(scope.latMinute > 59 || scope.latSecond > 59){
                            valid = false;
                        }
                        if(scope.lonMinute > 59 || scope.lonSecond > 59){
                            valid = false;
                        }
                        if(scope.mapData.RegionMappingCollection && ownRegionName.toLowerCase().trim() != scope.selectedRegion.Name.toLowerCase().trim()){
                            var clusters = _.find(scope.mapData.RegionMappingCollection,function(n){
                                return n.Name.toLowerCase().trim() == scope.selectedRegion.Name.toLowerCase().trim();
                            });
                            if(clusters){
                                scope.isExist = true;
                                valid = false;
                            }
                        }
                        if(valid && scope.selectedRegion.RegionMappingDetails  && scope.selectedRegion.RegionMappingDetails.length <= 0){
                            valid = false;
                            alert("No value selected for region mapping");
                        }
                        return valid;
                    }
                    var refreshObject = function(selectedRegion){
                        var latitude = scope.latDegree+"° "+scope.latMinute+" ' "+scope.latSecond+" \" "+scope.selectedLatitude.Value;
                        var longitude = scope.lonDegree+"° "+scope.lonMinute+" ' "+scope.lonSecond+" \" "+scope.selectedLongitude.Value;
                        selectedRegion.Latitude = latitude;
                        selectedRegion.Longitude = longitude;

                        return selectedRegion;
                    };
                    var addMappedValues = function(selectedRegion){
                        _.forEach(scope.distinctRegionList,function(f){
                            if(f.isSelected){
                                selectedRegion.RegionMappingDetails.push({RegionMappingId:-1,MappedValue: f.Value});
                            }
                        });
                        return selectedRegion;
                    };
                    scope.countrySelectionChange = function(country){
                        scope.selectedRegion.CountryId = country.Countrykey;
                    };
                    scope.showAdvancedSearch = function(){
                        scope.isSearchDialogShown = true;
                        scope.searchTitle = "Advanced search";
                    };
                    scope.searchBtnClick = function(){
                        var searchData={
                            SessionId:scope.customer.SessionId,
                            CustomerId: scope.customer.CustomerId,
                            FromDate:$filter('date')(scope.selectedFromDate, 'yyyy-MM-dd HH:mm:ss'),
                            ToDate:$filter('date')(new Date(scope.selectedToDate.getTime()-999), 'yyyy-MM-dd HH:mm:ss')
                        };
                        customerSettingsFactory.GetDistinctRegionList(searchData);
                        scope.selectedFromDate = null;
                        scope.selectedToDate = null;
                    };
                    scope.$on(Notify.CUSTOMER_SETTINGS_DISTINCT_REGION_DATA_READY, function (event) {
                        scope.distinctRegionList = [];
                        if(scope.isEdit && scope.selectedRegion.RegionMappingDetails){
                            _.forEach(scope.selectedRegion.RegionMappingDetails,function(f) {
                                scope.distinctRegionList.push({isSelected: true, Value: f.MappedValue});
                            });
//                                _.forEach(scope.distinctRegionList,function(f){
//                                    var mappedItem = _.find(scope.selectedRegion.RegionMappingDetails,function(n){
//                                        return f.Value.toLowerCase().trim() === n.MappedValue.toLowerCase().trim();
//                                    });
//                                    if(mappedItem && !angular.isUndefined(mappedItem)){
//                                        f.isSelected = true;
//                                    }
//                                });
                        }
                        var distinctList = customerSettingsFactory.DistinctRegionList();
                        if(distinctList && distinctList.length > 0){
                            _.forEach(distinctList,function(f){
                                scope.distinctRegionList.push({isSelected:false,Value: f});
                            });
                        }
                        scope.distinctRegionList = _.sortBy(scope.distinctRegionList, function(x) {return x.Value.toLowerCase();});
                    });
                },
                templateUrl: 'Views/CustomerSettings/RegionMapping/AddEditRegionMappingTemplate.html'
            };
        }]);

});
