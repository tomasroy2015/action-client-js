"use strict";
define(['application-configuration','accountFactory','lodash'], function (app) {
    app.register.controller('customerSettingsController', ['$scope','$rootScope','$modalInstance','accountFactory','$timeout',
        'customerSettingsFactory','UserType',
        function ($scope,$rootScope,$modalInstance,accountFactory,$timeout,customerSettingsFactory,UserType) {
            $scope.selectedCustomer = null;
            $scope.currentuser = accountFactory.UserData();
            $scope.sessionID = $scope.currentuser.SessionId;
            var menuColl=[
                {title:'GENERAL SETTINGS',menuIndex:1},
                {title:'USER ACCOUNTS',menuIndex:2},
                {title:'COUNTRY MAPPING',menuIndex:3},
                {title:'REGION MAPPING',menuIndex:4},
                {title:'SITE CLUSTERING',menuIndex:5},
                {title:'COMPARATOR MAPPING',menuIndex:6},
                {title:'DATA FILTER SETTINGS',menuIndex:7},
                {title:'SHORT CODE MAPPING',menuIndex:8},
                {title:'IP MAPPING',menuIndex:9}
            ];
            /*
             customer admin
             metatude3@gmail.com
             1234
             */
            var viewStackEnum={
                GENERAL_SETTINGS:'general',
                USER_ACCOUNTS:'user',
                COUNTRY_MAPPING:'country',
                REGION_MAPPING:'region',
                SITE_CLUSTERING:'site',
                COMPARATOR_MAPPING:'comparator',
                DATA_FILTER_SETTINGS:'datafilter',
                SHORT_CODE_MAPPING:'shortcode',
                IP_MAPPING:'ip'
            }

            $scope.menuItem_eventHandler=function(menuIndex,event){
                var ele=event.currentTarget;
                $("#"+ele.id).siblings().addClass('btn-arrow-customer-settings-menu').removeClass('btn-arrow-customer-settings-menu-selected');
                $("#"+ele.id).addClass('btn-arrow-customer-settings-menu-selected').removeClass('btn-arrow-customer-settings-menu');
                if($scope.currentuser.UserType == UserType.GIARTE_ADMIN)
                {
                    pushPopGiarteAdminUser(menuIndex);
                }
                    switch(menuIndex){
                        case 1:
                            generalSettings_ClickHandler();
                            break;
                        case 2:
                            userAccounts_ClickHandler();
                            break;
                        case 3:
                            countryMapping_ClickHandler();
                            break;
                        case 4:
                            regionMapping_ClickHandler();
                            break;
                        case 5:
                            siteClustering_ClickHandler();
                            break;
                        case 6:
                            comparatorMapping_ClickHandler();
                            break;
                        case 7:
                            dataFilterSettings_ClickHandler();
                            break;
                        case 8:
                            shortCodeMapping_ClickHandler();
                            break;
                        case 9:
                            ipMapping_ClickHandler();
                            break;
                    }
            }
            //$scope.selectedUserSettingsMenu=menuColl;
                //menuColl.push(giarteUserMenu);
            //$scope.currentuser.UserType
            $scope.selectedUserSettingsMenu= _.filter(menuColl,function(item){
                return isMenuItemValid(item);

            });
/*
 Id: "5f6349de-326c-403b-a0fd-df3f2e20c778"
 IsActive: true
 IsCustomerSettingsAllowed: true
 IsPasswordSet: false
 IsSentimentAllowed: true
 IsSentimentDetailsAllowed: true
 IsUserCreationAllowed: true
 Password: "81dc9bdb52d04dc20036dbd8313ed055"
 SessionId: "1def8083-e844-473c-8c17-ad752f3be569"
 UserFullName: "Bryan Verkade"
 UserId: "tanvirul@metatude.com"
 UserToCustomers: Array[23]
 UserType: 1
 __proto__: Object

 */
            function isMenuItemValid(item){
                var result=false;
                switch($scope.currentuser.UserType){
                    case UserType.GIARTE_ADMIN:
                        result=true;
                        break;
                    case UserType.CUSTOMER_ADMIN:
                       if((item.menuIndex==1)||
                           (item.menuIndex==8)||
                           (item.menuIndex==9) )
                       {
                           result=false;
                       }
                       else if(item.menuIndex==2){
                           result = $scope.currentuser.IsUserCreationAllowed
                       }
                        else{
                           result=true;
                       }
                        break;
                    case UserType.END_USER:
                        break;
                }
                return result;
            }

            $scope.setSelectedCustomer=function(customer){
                customerSettingsFactory.SetSelectedCustomer(customer);
                $scope.selectedCustomer= getCurrentCustomerFromFactory(customer);
            }
            function getCurrentCustomerFromFactory(customer){
                if(customer.CustomerId=="GIA")
                return customerSettingsFactory.GetSelectedCustomer().Giarte;
                else{
                    return customerSettingsFactory.GetSelectedCustomer().Others;
                }
            }
            function initSelectionMenu(){
              var proxyEvent={
                  currentTarget:{
                      id:'customerSettingsMenu-0'
                  }
              }
                var initIndex=$scope.selectedUserSettingsMenu[0].menuIndex;


                $scope.menuItem_eventHandler(initIndex,proxyEvent);
            };
            $scope.setSelectedCustomer($scope.currentuser.UserToCustomers[0]);
            $scope.customerChanged = function(selectedCustomer){
                customerSettingsFactory.SetSelectedCustomer(selectedCustomer);
                $scope.selectedCustomer=getCurrentCustomerFromFactory(selectedCustomer);
            };
            $timeout(function(){
                initSelectionMenu();
            },100)
            function pushPopGiarteAdminUser(menuIndex){
                var length=$scope.currentuser.UserToCustomers.length;
                var item=$scope.currentuser.UserToCustomers[length-1];
                if(menuIndex==2){
                    var giarteUser={
                        CustomerId:'GIA',
                        CustomerName:'Giarte admin'
                    }
                    if(item.CustomerId!="GIA")
                    {
                        $scope.currentuser.UserToCustomers.push(giarteUser);
                    }
                }
                else{
                        if(item.CustomerId=="GIA")
                        {
                            $scope.selectedCustomer=customerSettingsFactory.GetSelectedCustomer().Others;
                            var index=0;
                            for(index=0;index<length;index++)
                            {
                                console.log("index:"+index+"name :"+$scope.currentuser.UserToCustomers[index].CustomerId);
                                var item=$scope.currentuser.UserToCustomers[index];
                                if(item.CustomerId==$scope.selectedCustomer.CustomerId)
                                {
                                    break;
                                }
                            }
                            $("#customerSettings_ddlClient").prop('selectedIndex',index);

                        }
                }
            }


            function generalSettings_ClickHandler(){
                $scope.selectedView= viewStackEnum.GENERAL_SETTINGS;
            }
            function userAccounts_ClickHandler(){
                $scope.selectedView= viewStackEnum.USER_ACCOUNTS;
            }
            function countryMapping_ClickHandler(){
                $scope.selectedView= viewStackEnum.COUNTRY_MAPPING;

            }
            function regionMapping_ClickHandler(){
                $scope.selectedView= viewStackEnum.REGION_MAPPING;
            }
            function siteClustering_ClickHandler(){
                $scope.selectedView= viewStackEnum.SITE_CLUSTERING;
            }
            function comparatorMapping_ClickHandler(){
                $scope.selectedView= viewStackEnum.COMPARATOR_MAPPING;
            }
            function dataFilterSettings_ClickHandler(){
                $scope.selectedView= viewStackEnum.DATA_FILTER_SETTINGS;

            }
            function shortCodeMapping_ClickHandler(){
                $scope.selectedView= viewStackEnum.SHORT_CODE_MAPPING;
            }
            function ipMapping_ClickHandler(){
                $scope.selectedView= viewStackEnum.IP_MAPPING;
            }

            $scope.cancel = function () {
                $modalInstance.dismiss('cancel');
            };
        }]);

});

